>>> module = __import__('7-base_geometry')
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> len(module.__doc__) > 1
True
>>> len(BaseGeometry.__doc__) > 1
True
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("name", 2)
>>> bg.integer_validator(2, 2)
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented
>>> bg.integer_validator(True, 2)
>>> bg.integer_validator("name", True)
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("name", 0)
Traceback (most recent call last):
...
ValueError: name must be greater than 0
>>> bg.integer_validator("name", 0)
Traceback (most recent call last):
...
ValueError: name must be greater than 0
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> bg.integer_validator(None, None)
Traceback (most recent call last):
...
TypeError: None must be an integer
>>> bg.integer_validator("one")
Traceback (most recent call last):
...
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator("test", (5, 7))
Traceback (most recent call last):
...
TypeError: test must be an integer
>>> bg.integer_validator("", 1)
>>> bg.area(1)
Traceback (most recent call last):
...
TypeError: BaseGeometry.area() takes 1 positional argument but 2 were given
>>> bg.integer_validator("dict", {"key": "value"})
Traceback (most recent call last):
...
TypeError: dict must be an integer
>>> bg.integer_validator("set", {"hello", "world"})
Traceback (most recent call last):
...
TypeError: set must be an integer
>>> bg.integer_validator("more", 1, 2)
Traceback (most recent call last):
...
TypeError: BaseGeometry.integer_validator() takes 3 positional arguments but 4 were given
>>> bg.integer_validator("list", [1, 2])
Traceback (most recent call last):
...
TypeError: list must be an integer
